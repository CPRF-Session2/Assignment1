A compiler is basically a translator that transforms what the user codes through modern day coding languages into binary/machine code, or a quintessential language that the computer can understand.
The difference between compilation and runtime errors are that compilation errors have more to do with the syntax and the existance of the commands used while runtime errors consist of problems with the program. Compilation errors take place when the compiler cannot 'translate' the program because the codes are not registered as having an equivalent in binary code within the compiler, or the code was not properly typed in a way that the compiler does not recognize it to be the command that the programmer intended. Runtime errors happen when lines of code are missing or conflict with one another, causing for there to be issues when it is time for them to be executed. The program is flawed, and thus the error comes to the programmer's attention.
2a: This is a compilation error, as the programmer forgot to include a semi-colon at the end of the line of code.
2b: This is a compilation error, as the float is called '1num', but variable names cannot start with a number, and must instead start with a letter.
2c: This is a runtime error, as one cannot divide by 0. While the syntax is technically correct, when it is time to execute the command, a runtime error will occur from a lack of ability to run the action.
3: There are two errors with the following code, as 'Return' should be all lowercase in the line "Return 0;", and %d should be %f. %d is used in accordance with integers. However, since variable 'x' was declared a float, the '%d' in the 'printf' line of code must be corrected to %f.
